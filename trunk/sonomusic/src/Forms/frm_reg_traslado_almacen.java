/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Clases.Cl_Albaran;
import Clases.Cl_Conectar;
import Clases.Cl_Productos;
import Clases.Cl_Tipo_Documentos;
import Clases.Cl_Varios;
import Clases.table_render;
import Vistas.frm_ver_prod_alm;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sonomusic.frm_menu;

/**
 *
 * @author pc
 */
public class frm_reg_traslado_almacen extends javax.swing.JInternalFrame {

    Cl_Conectar con = new Cl_Conectar();
    Cl_Varios ven = new Cl_Varios();
    Cl_Albaran alb = new Cl_Albaran();
    Cl_Productos pro = new Cl_Productos();
    Cl_Tipo_Documentos tido = new Cl_Tipo_Documentos();
    public static DefaultTableModel detalle;
    public static int idsol = 0;
    public static int idtras = 0;
    public static String accion = "traslado";
    Integer i;

    /**
     * Creates new form frm_traslado_almacen
     */
    public frm_reg_traslado_almacen() {
        initComponents();
        txt_fec.setText(ven.fechaformateada(ven.getFechaActual()));

        String almacen = "select nom_alm from almacen order by idAlmacen asc";
        ver_almacen(almacen);
        cbx_alm_or.setSelectedItem(frm_menu.alm.getNom());
        detalle = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int fila, int columna) {
                if (columna < 5) {
                    return false;
                } else {
                    return true;
                }
            }
        };
        detalle.addColumn("Id");
        detalle.addColumn("Descripcion");
        detalle.addColumn("Marca");
        detalle.addColumn("Cant.");
        detalle.addColumn("Und. Med");
        t_detalle.setModel(detalle);
        t_detalle.getColumnModel().getColumn(0).setPreferredWidth(10);
        t_detalle.getColumnModel().getColumn(1).setPreferredWidth(350);
        t_detalle.getColumnModel().getColumn(2).setPreferredWidth(30);
        t_detalle.getColumnModel().getColumn(3).setPreferredWidth(30);
        t_detalle.getColumnModel().getColumn(4).setPreferredWidth(30);
        detalle.fireTableDataChanged();
        cbx_alm_or.requestFocus();
    }

    private void ver_almacen(String query) {
        try {
            Statement st = con.conexion();
            ResultSet rs = con.consulta(st, query);

            while (rs.next()) {
                String fila;
                fila = rs.getString("nom_alm");
                cbx_alm_or.addItem(fila);
                cbx_alm_de.addItem(fila);
            }
            con.cerrar(st);
            con.cerrar(rs);
        } catch (SQLException e) {
            System.out.print(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cbx_alm_or = new javax.swing.JComboBox();
        cbx_alm_de = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        btn_add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_detalle = new javax.swing.JTable();
        btn_cc = new javax.swing.JButton();
        btn_el = new javax.swing.JButton();
        btn_cer = new javax.swing.JButton();
        btn_reg = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_ser = new javax.swing.JTextField();
        txt_num = new javax.swing.JTextField();
        chk_emitir = new javax.swing.JCheckBox();
        txt_fec = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txt_brev = new javax.swing.JTextField();
        txt_cons = new javax.swing.JTextField();
        txt_chofer = new javax.swing.JTextField();
        txt_raz_alm = new javax.swing.JTextField();
        txt_ruc_alm = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_ruc_tra = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txt_raz_tra = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txt_marca = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txt_placa = new javax.swing.JTextField();

        setBackground(new java.awt.Color(254, 254, 254));
        setClosable(true);
        setTitle("Traslado entre Almacenes");
        setMaximumSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Opciones:");

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(212, 2, 2));
        jLabel2.setText("Almacen Origen");

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(212, 2, 2));
        jLabel3.setText("Almacen Destino");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(212, 2, 2));
        jLabel4.setText("Fecha");

        cbx_alm_or.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_alm_orActionPerformed(evt);
            }
        });
        cbx_alm_or.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_alm_orKeyPressed(evt);
            }
        });

        cbx_alm_de.setEnabled(false);
        cbx_alm_de.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbx_alm_deActionPerformed(evt);
            }
        });
        cbx_alm_de.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cbx_alm_deKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 0));
        jLabel6.setText("Detalle:");

        btn_add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/delivery.png"))); // NOI18N
        btn_add.setText("Agregar Productos");
        btn_add.setEnabled(false);
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(254, 254, 254));

        t_detalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        t_detalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                t_detalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(t_detalle);

        btn_cc.setText("+/-");
        btn_cc.setEnabled(false);
        btn_cc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ccActionPerformed(evt);
            }
        });

        btn_el.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/bin_closed.png"))); // NOI18N
        btn_el.setText("Eliminar");
        btn_el.setEnabled(false);
        btn_el.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_elActionPerformed(evt);
            }
        });

        btn_cer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/cancel.png"))); // NOI18N
        btn_cer.setText("Cerrar");
        btn_cer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cerActionPerformed(evt);
            }
        });

        btn_reg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/printer.png"))); // NOI18N
        btn_reg.setText("Registrar");
        btn_reg.setEnabled(false);
        btn_reg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_regActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(212, 2, 2));
        jLabel8.setText("Serie:");

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(212, 2, 2));
        jLabel9.setText("Numero:");

        txt_ser.setEditable(false);
        txt_ser.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_ser.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_ser.setText("0");
        txt_ser.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_serKeyPressed(evt);
            }
        });

        txt_num.setEditable(false);
        txt_num.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        txt_num.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_num.setText("0");

        chk_emitir.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        chk_emitir.setForeground(new java.awt.Color(212, 2, 2));
        chk_emitir.setText("Emitir Guia de Remision");
        chk_emitir.setFocusable(false);
        chk_emitir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chk_emitirActionPerformed(evt);
            }
        });

        txt_fec.setEditable(false);
        try {
            txt_fec.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_fec.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txt_fec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_fecKeyPressed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("Datos de la Unidad de Transporte:");

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(212, 2, 2));
        jLabel10.setText("Brevete");

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(212, 2, 2));
        jLabel11.setText("Nro. Constancia Insc.");

        jLabel12.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(212, 2, 2));
        jLabel12.setText("Nombres y Apellidos:");

        txt_brev.setEditable(false);
        txt_brev.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_brevKeyPressed(evt);
            }
        });

        txt_cons.setEditable(false);
        txt_cons.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_consKeyPressed(evt);
            }
        });

        txt_chofer.setEditable(false);

        txt_raz_alm.setEditable(false);

        txt_ruc_alm.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 0));
        jLabel7.setText("Datos del Transportista:");

        txt_ruc_tra.setEditable(false);
        txt_ruc_tra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ruc_traKeyPressed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(212, 2, 2));
        jLabel13.setText("RUC:");

        txt_raz_tra.setEditable(false);
        txt_raz_tra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_raz_traKeyPressed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(212, 2, 2));
        jLabel14.setText("Raz. Social:");

        jLabel15.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(212, 2, 2));
        jLabel15.setText("Marca:");

        txt_marca.setEditable(false);
        txt_marca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_marcaKeyPressed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(212, 2, 2));
        jLabel16.setText("Nro. Placa:");

        txt_placa.setEditable(false);
        txt_placa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_placaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chk_emitir))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btn_cc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_el)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_reg)
                                .addGap(18, 18, 18)
                                .addComponent(btn_cer))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btn_add))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel15)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_placa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_brev, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_cons, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txt_chofer))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(30, 30, 30)
                                        .addComponent(cbx_alm_or, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel3)
                                        .addGap(24, 24, 24)
                                        .addComponent(cbx_alm_de, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txt_ruc_alm, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txt_raz_alm)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_ser)
                            .addComponent(txt_num, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                            .addComponent(txt_fec)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_ruc_tra, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_raz_tra)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chk_emitir, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_alm_or, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ser, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbx_alm_de, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_num, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_raz_alm, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ruc_alm, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_fec, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_ruc_tra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_raz_tra, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_brev, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_cons, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_marca, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_placa, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_chofer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_add, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_cc, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_el, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_cer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_reg, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_cerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cerActionPerformed
        accion = "";
        this.dispose();
        
    }//GEN-LAST:event_btn_cerActionPerformed

    private void chk_emitirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chk_emitirActionPerformed
        if (chk_emitir.isSelected()) {
            int idalm = frm_menu.alm.getId();
            int idtido = 4;
            txt_ser.setText("" + tido.ver_ser(idtido, idalm));
            txt_ser.setEditable(true);
            txt_num.setText("" + tido.ver_num(idtido, idalm));
            txt_num.setEditable(true);
            txt_ruc_tra.setEditable(true);
            txt_ruc_tra.requestFocus();
        } else {
            txt_ser.setEditable(false);
            txt_ser.setText("0");
            txt_num.setEditable(false);
            txt_num.setText("0");
        }
    }//GEN-LAST:event_chk_emitirActionPerformed

    private void cbx_alm_orActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_alm_orActionPerformed

    }//GEN-LAST:event_cbx_alm_orActionPerformed

    private void cbx_alm_deActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbx_alm_deActionPerformed

    }//GEN-LAST:event_cbx_alm_deActionPerformed

    private void txt_serKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_serKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_num.setEditable(true);
            txt_num.requestFocus();
        }
    }//GEN-LAST:event_txt_serKeyPressed

    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        frm_ver_prod_alm prod_alm = new frm_ver_prod_alm();
        Integer ida = cbx_alm_or.getSelectedIndex() + 1;
        String alm = cbx_alm_or.getSelectedItem().toString();
//        String query = "select p.idProductos, p.desc_pro, p.modelo, p.serie, p.marca, pa.cant, p.cant_min, pa.precio, p.estado, c.desc_clas, "
//                + "u.desc_und, p.grado from producto_almacen as pa inner join productos as p on pa.idProductos=p.idProductos inner join clasificacion as "
//                + "c on p.id_clas=c.id_clas inner join und_medida as u on p.idUnd_Medida=u.idUnd_Medida where pa.idAlmacen = '" + ida + "' "
//                + "order by p.desc_pro asc";
//        pro.mostrar_productos(query);
        prod_alm.t_productos.setDefaultRenderer(Object.class, new table_render());
        prod_alm.txt_ida.setText(ida.toString());
        prod_alm.txt_noma.setText(alm);
        prod_alm.funcion = "traslado";
        ven.llamar_ventana(prod_alm);
    }//GEN-LAST:event_btn_addActionPerformed

    private void t_detalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_detalleMousePressed
        i = t_detalle.getSelectedRow();
        btn_el.setEnabled(true);
        btn_cc.setEnabled(true);
    }//GEN-LAST:event_t_detalleMousePressed

    private void btn_elActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_elActionPerformed
        detalle.removeRow(i);
    }//GEN-LAST:event_btn_elActionPerformed

    private void btn_ccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ccActionPerformed
        Double cantidad = Double.parseDouble(JOptionPane.showInputDialog("Ingrese Cantidad"));
        t_detalle.setValueAt(cantidad, i, 3);
    }//GEN-LAST:event_btn_ccActionPerformed

    private void llenar() {
        alb.setFecha(ven.fechabase(txt_fec.getText()));
        alb.setMotivo("TRASLADO");
        try {
            Integer id = cbx_alm_or.getSelectedIndex() + 1;
            Statement st = con.conexion();
            String ver_dir = "select dir_alm from almacen where idAlmacen='" + id + "'";
            ResultSet rs = con.consulta(st, ver_dir);
            if (rs.next()) {
                alb.setOrigen(rs.getString("dir_alm"));
            }
            con.cerrar(rs);
            con.cerrar(st);
        } catch (SQLException ex) {
            System.out.print(ex);
        }

        try {
            Integer id = cbx_alm_de.getSelectedIndex() + 1;
            Statement st = con.conexion();
            String ver_dir = "select dir_alm from almacen where idAlmacen='" + id + "'";
            ResultSet rs = con.consulta(st, ver_dir);
            if (rs.next()) {
                alb.setDestino(rs.getString("dir_alm"));
            }
            con.cerrar(rs);
            con.cerrar(st);
        } catch (SQLException ex) {
            System.out.print(ex);
        }

        alb.setSer(Integer.parseInt(txt_ser.getText()));
        alb.setNro(Integer.parseInt(txt_num.getText()));
        alb.setBrevete(txt_brev.getText());
        alb.setRuc_tran(txt_ruc_tra.getText());
        alb.setRaz_tran(txt_raz_tra.getText());
        alb.setChofer(txt_chofer.getText());
        alb.setConstancia(txt_cons.getText());
        alb.setMarca(txt_marca.getText());
        alb.setPlaca(txt_placa.getText());
    }


    private void btn_regActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_regActionPerformed
        llenar();
        Integer alm_or = cbx_alm_or.getSelectedIndex() + 1;
        Integer alm_de = cbx_alm_de.getSelectedIndex() + 1;
        Double cant_act = 0.00;
        Double nueva_cant = 0.00;
        String ruc = "";
        String raz = "";
        String dir = "";
        if (accion.equals("traslado")) {

            try {
                int idalma = cbx_alm_de.getSelectedIndex() + 1;
                Statement st = con.conexion();
                String ver_emp = "select * from almacen where idAlmacen = '" + idalma + "'";
                ResultSet rs = con.consulta(st, ver_emp);
                if (rs.next()) {
                    ruc = rs.getString("ruc");
                    raz = rs.getString("raz_soc");
                    dir = rs.getString("dir_alm");
                }
                con.cerrar(rs);
                con.cerrar(st);
            } catch (SQLException ex) {
                System.out.print(ex);
            }

            if (chk_emitir.isSelected()) {
                int ser, nro, alm, doc;
                ser = Integer.parseInt(txt_ser.getText());
                nro = Integer.parseInt(txt_num.getText());
                alm = frm_menu.alm.getId();
                doc = 4;
                tido.act_doc(ser, nro + 1, alm, doc);
            }

            try {
                Statement st = con.conexion();
                String ins_tras = "insert into traslado Values (null, '" + alb.getFecha() + "', '" + alb.getMotivo() + "', "
                        + "'" + alb.getOrigen() + "', '" + alb.getDestino() + "', '" + ruc + "', '" + raz + "', '" + frm_menu.usu.getNick() + "',"
                        + "'" + alb.getNro() + "', '" + alb.getSer() + "', '0', '" + alb.getRuc_tran() + "', '" + alb.getRaz_tran() + "', '" + alb.getMarca() + "'"
                        + ", '" + alb.getPlaca() + "', '" + alb.getBrevete() + "', '" + alb.getConstancia() + "', '" + alb.getChofer() + "')";
                con.actualiza(st, ins_tras);
                con.cerrar(st);
            } catch (Exception ex) {
                System.out.print(ex);
            }

            try {
                Statement st = con.conexion();
                String ver_tras = "select idTraslado from traslado where nick = '" + frm_menu.lbl_user.getText() + "' and ruc_dest = '" + ruc + "' order by idTraslado desc limit 1";
                ResultSet rs = con.consulta(st, ver_tras);
                if (rs.next()) {
                    alb.setId(rs.getInt("idTraslado"));
                }
                con.cerrar(rs);
                con.cerrar(st);
            } catch (SQLException ex) {
                System.out.print(ex);
            }

            if (idsol != 0) {
                System.out.println("idsolicitud" + idsol);
                String fecha1 = ven.fechabase(txt_fec.getText());
                System.out.println(alb.getFecha());
                try {
                    Statement st = con.conexion();
                    String upd_sol = "update solicitud_articulos set estado = '1', fec_env = '" + fecha1 + "' where idsolicitud = '" + idsol + "'";
                    con.actualiza(st, upd_sol);
                    con.cerrar(st);
                } catch (Exception e) {
                    System.out.println(e);
                }

            }

            //leer filas de tabla
            Integer filas = t_detalle.getRowCount();
            for (int x = 0; x <= (filas - 1); x++) {
                pro.setId_pro(Integer.parseInt(t_detalle.getValueAt(x, 0).toString()));
                pro.setCan(Double.parseDouble(t_detalle.getValueAt(x, 3).toString()));

                try {
                    Statement st = con.conexion();
                    String ver_pro_alm = "select costo_compra from productos where idProductos = '" + pro.getId_pro() + "'";
                    ResultSet rs = con.consulta(st, ver_pro_alm);
                    if (rs.next()) {
                        pro.setCos_pro(rs.getDouble("costo_compra"));
                    }
                    con.cerrar(rs);
                    con.cerrar(st);
                } catch (SQLException ex) {
                    System.out.print(ex);
                }

                //registrar detalle de traslado
                try {
                    Statement st = con.conexion();
                    String ins_tras = "insert into productos_traslado Values ('" + alb.getId() + "', '" + pro.getId_pro() + "', '" + pro.getCan() + "')";
                    con.actualiza(st, ins_tras);
                    con.cerrar(st);
                } catch (Exception ex) {
                    System.out.print(ex);
                }
                //registrar retiro de primer almacen (actualizar cantidades)
                try {
                    Statement st = con.conexion();
                    String ver_pro_alm = "select cant from producto_almacen where idAlmacen = '" + alm_or + "' and idProductos= '" + pro.getId_pro() + "'";
                    ResultSet rs = con.consulta(st, ver_pro_alm);
                    if (rs.next()) {
                        cant_act = rs.getDouble("cant");
                    } else {
                        cant_act = 0.0;
                    }
                    con.cerrar(rs);
                    con.cerrar(st);
                } catch (SQLException ex) {
                    System.out.print(ex);
                }

                nueva_cant = cant_act - pro.getCan();

                try {
                    Statement st = con.conexion();
                    String act_pro_alm = "Update producto_almacen set cant = '" + nueva_cant + "' where "
                            + "idAlmacen = '" + alm_or + "' and idProductos= '" + pro.getId_pro() + "'";
                    con.actualiza(st, act_pro_alm);
                    con.cerrar(st);
                } catch (Exception ex) {
                    System.out.print(ex);
                }

                try {
                    Statement st = con.conexion();
                    String ins_kardex = "insert into kardex Values (null, '" + alb.getFecha() + "', '" + pro.getId_pro() + "', '0.00', '0.00', '" + pro.getCan() + "', '" + pro.getCos_pro() + "',"
                            + "'" + alb.getSer() + "', '" + alb.getNro() + "', '4', '" + alm_or + "', '" + ruc + "', '" + raz + "', '11')";
                    con.actualiza(st, ins_kardex);
                    con.cerrar(st);
                } catch (Exception ex) {
                    System.out.print(ex);
                }

            }
        }
        if (accion.equals("compruebat")) {

            try {
                int idalma = cbx_alm_de.getSelectedIndex() + 1;
                Statement st = con.conexion();
                String ver_emp = "select * from almacen where idAlmacen = '" + idalma + "'";
                ResultSet rs = con.consulta(st, ver_emp);
                if (rs.next()) {
                    ruc = rs.getString("ruc");
                    raz = rs.getString("raz_soc");
                    dir = rs.getString("dir_alm");
                }
                con.cerrar(rs);
                con.cerrar(st);
            } catch (SQLException ex) {
                System.out.print(ex);
            }

            Integer filas = t_detalle.getRowCount();
            for (int x = 0; x <= (filas - 1); x++) {
                pro.setId_pro(Integer.parseInt(t_detalle.getValueAt(x, 0).toString()));
                pro.setCan(Double.parseDouble(t_detalle.getValueAt(x, 5).toString()));
                System.out.println(pro.getCan() + " - id " + pro.getId_pro());

                try {
                    Statement st1 = con.conexion();
                    String ver_pre = "select precio_venta from Productos where idProductos  = '" + pro.getId_pro() + "'";
                    ResultSet rs1 = con.consulta(st1, ver_pre);
                    if (rs1.next()) {
                        pro.setCos_pro(rs1.getDouble("precio_venta"));
                    }
                } catch (Exception e) {
                    System.out.println(e);
                }

                //registrar ingreso al segundo almacen (actualizar cantidades)
                try {
                    Statement st = con.conexion();
                    String ver_pro_alm = "select cant from producto_almacen where idAlmacen = '" + alm_de + "' and idProductos= '" + pro.getId_pro() + "'";
                    ResultSet rs = con.consulta(st, ver_pro_alm);
                    if (rs.next()) {
                        System.out.println(alm_or + " Cambiando cantidad en almacen");
                        cant_act = rs.getDouble("cant");
                        nueva_cant = cant_act + pro.getCan();

                        try {
                            Statement st1 = con.conexion();
                            String act_pro_alm = "Update producto_almacen set cant = '" + nueva_cant + "' where idAlmacen = '" + alm_de + "' and idProductos= '" + pro.getId_pro() + "'";
                            con.actualiza(st1, act_pro_alm);
                            con.cerrar(st1);
                        } catch (Exception ex) {
                            System.out.print(ex);
                        }

                    } else {
                        System.out.println(alm_de + " ingresando producto a almacen");
                        cant_act = 0.0;
                        nueva_cant = cant_act + pro.getCan();

                        try {
                            Statement st1 = con.conexion();
                            String ins_pro_alm = "insert into producto_almacen Values ('" + pro.getId_pro() + "', '" + alm_de + "', '" + nueva_cant + "', '" + pro.getCos_pro() + "')";
                            con.actualiza(st1, ins_pro_alm);
                            con.cerrar(st1);
                        } catch (Exception ex) {
                            System.out.println(ex);
                        }
                    }
                    con.cerrar(rs);
                    con.cerrar(st);
                } catch (SQLException ex) {
                    System.out.print(ex);
                }

                try {
                    Statement st = con.conexion();
                    String ins_kardex = "insert into kardex Values (null, '" + alb.getFecha() + "', '" + pro.getId_pro() + "', '" + pro.getCan() + "', '" + pro.getCos_pro() + "', '0.00', '0.00', "
                            + "'" + alb.getSer() + "', '" + alb.getNro() + "', '4', '" + alm_de + "', '" + ruc + "', '" + raz + "', '11')";
                    con.actualiza(st, ins_kardex);
                    con.cerrar(st);
                } catch (Exception ex) {
                    System.out.print(ex);
                }
            }

            try {
                Statement st = con.conexion();
                String upd_tra = "update traslado set estado = '1' where idTraslado = '" + idtras + "'";
                con.actualiza(st, upd_tra);
                con.cerrar(st);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        accion = "";
        this.dispose();

        //imprimir detalle de envio
    }//GEN-LAST:event_btn_regActionPerformed

    private void cbx_alm_orKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_alm_orKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            cbx_alm_de.setEnabled(true);
            cbx_alm_de.requestFocus();
        }
    }//GEN-LAST:event_cbx_alm_orKeyPressed

    private void cbx_alm_deKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbx_alm_deKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            try {
                int idalm = cbx_alm_de.getSelectedIndex() + 1;
                Statement st = con.conexion();
                String ver_alm = "select ruc, raz_soc from almacen where idAlmacen = '" + idalm + "'";
                ResultSet rs = con.consulta(st, ver_alm);
                if (rs.next()) {
                    txt_ruc_alm.setText(rs.getString("ruc"));
                    txt_raz_alm.setText(rs.getString("raz_soc"));
                    txt_fec.setEditable(true);
                    txt_fec.requestFocus();
                }
            } catch (Exception e) {
                System.out.println(e);
            }

        }
    }//GEN-LAST:event_cbx_alm_deKeyPressed

    private void txt_fecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_fecKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txt_fec.getText().trim().length() == 10) {
                btn_add.setEnabled(true);
                btn_add.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_fecKeyPressed

    private void txt_ruc_traKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ruc_traKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_raz_tra.setEditable(true);
            txt_raz_tra.requestFocus();
        }
    }//GEN-LAST:event_txt_ruc_traKeyPressed

    private void txt_raz_traKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_raz_traKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_marca.setEditable(true);
            txt_marca.requestFocus();
        }
    }//GEN-LAST:event_txt_raz_traKeyPressed

    private void txt_marcaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_marcaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_placa.setEditable(true);
            txt_placa.requestFocus();
        }
    }//GEN-LAST:event_txt_marcaKeyPressed

    private void txt_placaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_placaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_brev.setEditable(true);
            txt_brev.requestFocus();
        }
    }//GEN-LAST:event_txt_placaKeyPressed

    private void txt_brevKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_brevKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_cons.setEditable(true);
            txt_cons.requestFocus();
        }
    }//GEN-LAST:event_txt_brevKeyPressed

    private void txt_consKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_consKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_chofer.setEditable(true);
            txt_chofer.requestFocus();
        }
    }//GEN-LAST:event_txt_consKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_cc;
    private javax.swing.JButton btn_cer;
    private javax.swing.JButton btn_el;
    public static javax.swing.JButton btn_reg;
    public static javax.swing.JComboBox cbx_alm_de;
    public static javax.swing.JComboBox cbx_alm_or;
    private javax.swing.JCheckBox chk_emitir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JTable t_detalle;
    public static javax.swing.JTextField txt_brev;
    public static javax.swing.JTextField txt_chofer;
    public static javax.swing.JTextField txt_cons;
    public static javax.swing.JFormattedTextField txt_fec;
    public static javax.swing.JTextField txt_marca;
    public static javax.swing.JTextField txt_num;
    public static javax.swing.JTextField txt_placa;
    public static javax.swing.JTextField txt_raz_alm;
    public static javax.swing.JTextField txt_raz_tra;
    public static javax.swing.JTextField txt_ruc_alm;
    public static javax.swing.JTextField txt_ruc_tra;
    public static javax.swing.JTextField txt_ser;
    // End of variables declaration//GEN-END:variables
}
